"""empty message

Revision ID: f64c7735ec58
Revises: 7e411683509e
Create Date: 2018-04-08 21:06:56.523613

"""
from alembic import op
import sqlalchemy as sa
from db.migrations.replaceableObjects import ReplaceableObject


# revision identifiers, used by Alembic.
revision = 'f64c7735ec58'
down_revision = '7e411683509e'
branch_labels = None
depends_on = None


fxGetEventFrameFriendlyName = ReplaceableObject(
    "fxGetEventFrameFriendlyName",
    "eventFrameId INT",
    "TEXT",
    """
BEGIN
	RETURN(SELECT IF(EventFrame.Name IS NOT NULL AND EventFrame.Name <> '', EventFrame.Name, CONCAT(DATE_FORMAT(EventFrame.StartTimestamp, '%m/%d/%y %H:%i'), ' - ', IF(EventFrame.EndTimestamp IS NULL, '', DATE_FORMAT(EventFrame.EndTimestamp, '%m/%d/%y %H:%i'))))
	FROM EventFrame
	WHERE EventFrame.EventFrameId = eventFrameId);
END;
    """
)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Note',
    sa.Column('NoteId', sa.Integer(), nullable=False),
    sa.Column('Note', sa.Text(), nullable=False),
    sa.Column('Timestamp', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('NoteId')
    )
    op.create_index('IX__Timestamp', 'Note', ['Timestamp'], unique=False)
    op.create_table('Role',
    sa.Column('RoleId', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=45), nullable=False),
    sa.Column('Permissions', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('RoleId'),
    sa.UniqueConstraint('Name', name='AK__Name')
    )
    op.create_index('IX__Name', 'Role', ['Name'], unique=False)
    op.create_table('User',
    sa.Column('UserId', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(length=45), nullable=False),
    sa.Column('PasswordHash', sa.String(length=128), nullable=True),
    sa.Column('RoleId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['RoleId'], ['Role.RoleId'], name='FK__Role$Have$User'),
    sa.PrimaryKeyConstraint('UserId'),
    sa.UniqueConstraint('Name', name='AK__Name')
    )
    op.create_index('IX__Name', 'User', ['Name'], unique=False)
    op.create_table('EventFrameNote',
    sa.Column('EventFrameId', sa.Integer(), nullable=False),
    sa.Column('NoteId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['EventFrameId'], ['EventFrame.EventFrameId'], name='FK__EventFrame$CanHave$EventFrameNote'),
    sa.ForeignKeyConstraint(['NoteId'], ['Note.NoteId'], name='FK__Note$CanBe$EventFrameNote'),
    sa.PrimaryKeyConstraint('NoteId', 'EventFrameId')
    )
    op.create_table('TagValueNote',
    sa.Column('NoteId', sa.Integer(), nullable=False),
    sa.Column('TagValueId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['NoteId'], ['Note.NoteId'], name='FK__Note$CanBe$TagValueNote'),
    sa.ForeignKeyConstraint(['TagValueId'], ['TagValue.TagValueId'], name='FK__TagValue$CanHave$TagValueNote'),
    sa.PrimaryKeyConstraint('NoteId', 'TagValueId')
    )
    op.drop_index('ix_TagValue_Timestamp', table_name='TagValue')
    op.create_index('IX__Timestamp', 'TagValue', ['Timestamp'], unique=False)
    op.createFunction(fxGetEventFrameFriendlyName)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.dropFunction(fxGetEventFrameFriendlyName)
    op.drop_index('IX__Timestamp', table_name='TagValue')
    op.create_index('ix_TagValue_Timestamp', 'TagValue', ['Timestamp'], unique=False)
    op.drop_table('TagValueNote')
    op.drop_table('EventFrameNote')
    op.drop_index('IX__Name', table_name='User')
    op.drop_table('User')
    op.drop_index('IX__Name', table_name='Role')
    op.drop_table('Role')
    op.drop_index('IX__Timestamp', table_name='Note')
    op.drop_table('Note')
    # ### end Alembic commands ###
